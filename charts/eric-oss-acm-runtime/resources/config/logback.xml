<!--
  ~ ********************************************************************
  ~  Copyright (C) 2022 Ericsson Software Technology
  ~
  ~ The copyright to the computer program(s) herein is the property of
  ~ Ericsson Software Technology. The programs may be used and/or copied
  ~ only with written permission from Ericsson Software Technology or in
  ~ accordance with the terms and conditions stipulated in the
  ~ agreement/contract under which the program(s) have been supplied.
  ~ ********************************************************************

 -->
<configuration scan="true" scanPeriod="30 seconds" debug="false">

    <appender name="ErrorOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>/var/log/onap/policy/policy-clamp-runtime-acm/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>/var/log/onap/policy/policy-clamp-runtime-acm/error.%d{yyyy-MM-dd}.%i.log.zip
            </fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <encoder>
            <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="AsyncErrorOut" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="ErrorOut" />
    </appender>

    <appender name="DebugOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>/var/log/onap/policy/policy-clamp-runtime-acm/debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>/var/log/onap/policy/policy-clamp-runtime-acm/debug.%d{yyyy-MM-dd}.%i.log.zip
            </fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="AsyncDebugOut" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="DebugOut" />
    </appender>

    <appender name="NetworkOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>/var/log/onap/policy/policy-clamp-runtime-acm/network.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>/var/log/onap/policy/policy-clamp-runtime-acm/network.%d{yyyy-MM-dd}.%i.log.zip
            </fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%t]%m%n</pattern>
        </encoder>
    </appender>

    <appender name="AsyncNetworkOut" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="NetworkOut" />
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</Pattern>
        </encoder>
    </appender>

    <appender name="AsyncStdOut" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="STDOUT" />
    </appender>

    <logger name="network" level="INFO" additivity="false">
        <appender-ref ref="AsyncNetworkOut" />
        <appender-ref ref="AsyncStdOut" />
    </logger>

    <logger name="org.eclipse.jetty.server.RequestLog" level="info" additivity="false">
        <appender-ref ref="AsyncNetworkOut" />
        <appender-ref ref="AsyncStdOut" />
    </logger>

    <root level="INFO">
        <appender-ref ref="AsyncDebugOut" />
        <appender-ref ref="AsyncErrorOut" />
        <appender-ref ref="AsyncStdOut" />
    </root>

</configuration>
